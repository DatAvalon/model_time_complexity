# -*- coding: utf-8 -*-
"""
Created on Tue Aug 11 10:39:13 2020

@author: PC-4
"""
# %% 参考资料
# https://www.thekerneltrip.com/machine/learning/computational-complexity-learning-algorithms/

# %% import
import numpy as np
import pandas as pd
import time
from sklearn.linear_model import LinearRegression
import math

from sklearn.linear_model import SGDClassifier, SGDRegressor
from sklearn.svm import LinearSVC, LinearSVR
from sklearn.discriminant_analysis import (LinearDiscriminantAnalysis,
                                            QuadraticDiscriminantAnalysis)
from sklearn.neighbors import (NearestCentroid, KNeighborsClassifier,
                                KNeighborsRegressor)
from sklearn.gaussian_process import (GaussianProcessClassifier,
                                      GaussianProcessRegressor)
from sklearn.kernel_ridge import KernelRidge
from sklearn.naive_bayes import GaussianNB
from sklearn.experimental import enable_hist_gradient_boosting
from sklearn.ensemble import (GradientBoostingClassifier,
                              GradientBoostingRegressor,
                              HistGradientBoostingClassifier,
                              HistGradientBoostingRegressor)
from lightgbm import LGBMClassifier, LGBMRegressor

from sklearn.neural_network import MLPClassifier, MLPRegressor

from sklearn.kernel_approximation import (AdditiveChi2Sampler,
                                          Nystroem,
                                          RBFSampler,
                                          SkewedChi2Sampler)
from sklearn.pipeline import Pipeline

from warnings import filterwarnings
filterwarnings("ignore")

# %% func
class ComplexityEvaluator:

    def __init__(self, nrow_samples, ncol_samples):
        self._nrow_samples = nrow_samples
        self._ncol_samples = ncol_samples

    def _time_samples(self, model, random_data_generator):
        rows_list = []
        for nrow in self._nrow_samples:
            for ncol in self._ncol_samples:
                train, labels = random_data_generator(nrow, ncol)

                start_time = time.time()
                for i in range(1):
                    model.fit(train, labels)
                elapsed_time = time.time() - start_time

                elapsed_time /= 1.0

                result = {"N": nrow, "P": ncol, "Time": elapsed_time}
                rows_list.append(result)

        return rows_list

    def Run(self, model, random_data_generator):
        data = pd.DataFrame(self._time_samples(model, random_data_generator))
        print(data)
        data = data.applymap(lambda x: math.log(x + 1e-6))
        linear_model = LinearRegression(fit_intercept=True)
        linear_model.fit(data[["N", "P"]], data[["Time"]])
        R2 = linear_model.score(data[["N", "P"]], data[["Time"]])
        return linear_model.coef_, R2

def random_data_regression(n, p):
    return np.random.rand(n, p), np.random.rand(n)


def random_data_classification(n, p):
    return np.random.rand(n, p), np.random.binomial(1, 0.5, n)


# %% test
regression_models = [MLPRegressor()]

classification_models = [MLPClassifier()]

names = ["MLPRegressor",
         "MLPClassifier"]

complexity_evaluator = ComplexityEvaluator(
    [500, 1000, 2000, 4000],
    [2, 4, 8, 16, 32, 64, 128])

i = 0
for model in regression_models:
    res, R2 = complexity_evaluator.Run(model, random_data_regression)
    print(names[i] + ' | ' + str(round(res[0, 0], 3)) +
          ' | ' + str(round(res[0, 1], 3)))
    print(f"{R2=}")
    i = i + 1

for model in classification_models:
    res, R2 = complexity_evaluator.Run(model, random_data_classification)
    print(names[i] + ' | ' + str(round(res[0, 0], 3)) +
          ' | ' + str(round(res[0, 1], 3)))
    print(f"{R2=}")
    i = i + 1

# %% RandomForestRegressor
# =============================================================================
#        N    P       Time
# 0    500    2   0.168010
# 1    500    4   0.194911
# 2    500    8   0.265815
# 3    500   16   0.440225
# 4    500   32   0.654837
# 5    500   64   1.210769
# 6    500  128   2.265230
# 7   1000    2   0.248514
# 8   1000    4   0.352920
# 9   1000    8   0.501029
# 10  1000   16   0.786945
# 11  1000   32   1.513587
# 12  1000   64   2.664652
# 13  1000  128   4.996886
# 14  2000    2   0.475127
# 15  2000    4   0.678839
# 16  2000    8   1.081862
# 17  2000   16   1.853606
# 18  2000   32   3.406095
# 19  2000   64   6.410367
# 20  2000  128  12.251501
# 21  4000    2   0.910552
# 22  4000    4   1.352577
# 23  4000    8   2.510744
# 24  4000   16   4.375950
# 25  4000   32   8.062461
# 26  4000   64  15.205770
# 27  4000  128  29.394681
# RandomForestRegressor | 1.089 | 0.751
# R2=0.9851851266142898
# =============================================================================

# %% ExtraTreesRegressor
# =============================================================================
#        N    P      Time
# 0    500    2  0.108306
# 1    500    4  0.124407
# 2    500    8  0.156109
# 3    500   16  0.213912
# 4    500   32  0.322918
# 5    500   64  0.552832
# 6    500  128  0.983656
# 7   1000    2  0.154309
# 8   1000    4  0.188711
# 9   1000    8  0.254115
# 10  1000   16  0.385022
# 11  1000   32  0.615035
# 12  1000   64  1.102463
# 13  1000  128  2.086419
# 14  2000    2  0.252914
# 15  2000    4  0.328019
# 16  2000    8  0.466127
# 17  2000   16  0.728142
# 18  2000   32  1.232971
# 19  2000   64  2.279730
# 20  2000  128  4.311747
# 21  4000    2  0.453726
# 22  4000    4  0.610335
# 23  4000    8  0.895451
# 24  4000   16  1.482085
# 25  4000   32  2.565647
# 26  4000   64  4.845177
# 27  4000  128  9.220827
# ExtraTreesRegressor | 0.907 | 0.646
# R2=0.9748981329021141
# =============================================================================

# %% AdaBoostRegressor
# =============================================================================
#        N    P      Time
# 0    500    2  0.017001
# 1    500    4  0.023501
# 2    500    8  0.037902
# 3    500   16  0.053703
# 4    500   32  0.143208
# 5    500   64  0.258115
# 6    500  128  0.473827
# 7   1000    2  0.020801
# 8   1000    4  0.029502
# 9   1000    8  0.042502
# 10  1000   16  0.076404
# 11  1000   32  0.167510
# 12  1000   64  0.465927
# 13  1000  128  0.932153
# 14  2000    2  0.026402
# 15  2000    4  0.041802
# 16  2000    8  0.059303
# 17  2000   16  0.137008
# 18  2000   32  0.226813
# 19  2000   64  0.649437
# 20  2000  128  1.587791
# 21  4000    2  0.034002
# 22  4000    4  0.056803
# 23  4000    8  0.104606
# 24  4000   16  0.164809
# 25  4000   32  0.373121
# 26  4000   64  0.963055
# 27  4000  128  2.283831
# AdaBoostRegressor | 0.522 | 0.941
# R2=0.9731457314128683
# =============================================================================

# %% LinearRegression
# =============================================================================
#        N    P      Time
# 0    500    2  0.000300
# 1    500    4  0.000400
# 2    500    8  0.000400
# 3    500   16  0.000600
# 4    500   32  0.000800
# 5    500   64  0.001500
# 6    500  128  0.003900
# 7   1000    2  0.000300
# 8   1000    4  0.000400
# 9   1000    8  0.000400
# 10  1000   16  0.000700
# 11  1000   32  0.001200
# 12  1000   64  0.002200
# 13  1000  128  0.006700
# 14  2000    2  0.000500
# 15  2000    4  0.000600
# 16  2000    8  0.000600
# 17  2000   16  0.000800
# 18  2000   32  0.001600
# 19  2000   64  0.003400
# 20  2000  128  0.008900
# 21  4000    2  0.000500
# 22  4000    4  0.000500
# 23  4000    8  0.000600
# 24  4000   16  0.001100
# 25  4000   32  0.002800
# 26  4000   64  0.006800
# 27  4000  128  0.014601
# LinearRegression | 0.411 | 0.706
# R2=0.8909134513570489
#
# =============================================================================
# %% SVR
# =============================================================================
#        N    P      Time
# 0    500    2  0.008000
# 1    500    4  0.013201
# 2    500    8  0.013201
# 3    500   16  0.014801
# 4    500   32  0.015501
# 5    500   64  0.020301
# 6    500  128  0.029202
# 7   1000    2  0.032302
# 8   1000    4  0.035002
# 9   1000    8  0.041702
# 10  1000   16  0.052003
# 11  1000   32  0.064704
# 12  1000   64  0.078304
# 13  1000  128  0.117607
# 14  2000    2  0.104606
# 15  2000    4  0.119307
# 16  2000    8  0.154709
# 17  2000   16  0.211012
# 18  2000   32  0.254615
# 19  2000   64  0.315418
# 20  2000  128  0.467227
# 21  4000    2  0.419424
# 22  4000    4  0.461726
# 23  4000    8  0.598834
# 24  4000   16  0.862249
# 25  4000   32  1.106263
# 26  4000   64  1.425782
# 27  4000  128  1.966812
# SVR | 1.93 | 0.325
# R2=0.9947016335776879
# =============================================================================

#%% RandomForestClassifier
# =============================================================================
#        N    P      Time
# 0    500    2  0.135708
# 1    500    4  0.156009
# 2    500    8  0.153409
# 3    500   16  0.181410
# 4    500   32  0.200211
# 5    500   64  0.244414
# 6    500  128  0.292517
# 7   1000    2  0.178310
# 8   1000    4  0.217712
# 9   1000    8  0.216312
# 10  1000   16  0.306218
# 11  1000   32  0.337519
# 12  1000   64  0.459426
# 13  1000  128  0.588034
# 14  2000    2  0.287916
# 15  2000    4  0.392522
# 16  2000    8  0.380222
# 17  2000   16  0.581833
# 18  2000   32  0.694940
# 19  2000   64  1.014458
# 20  2000  128  1.303975
# 21  4000    2  0.645737
# 22  4000    4  0.823947
# 23  4000    8  0.816347
# 24  4000   16  1.236571
# 25  4000   32  1.558489
# 26  4000   64  2.235628
# 27  4000  128  3.068576
# RandomForestClassifier | 0.925 | 0.301
# R2=0.965272457016686
# =============================================================================

#%% ExtraTreesClassifier
# =============================================================================
#        N    P      Time
# 0    500    2  0.100506
# 1    500    4  0.106406
# 2    500    8  0.106206
# 3    500   16  0.115007
# 4    500   32  0.118307
# 5    500   64  0.131808
# 6    500  128  0.145308
# 7   1000    2  0.127407
# 8   1000    4  0.141108
# 9   1000    8  0.139708
# 10  1000   16  0.161009
# 11  1000   32  0.168010
# 12  1000   64  0.197111
# 13  1000  128  0.227013
# 14  2000    2  0.181510
# 15  2000    4  0.209312
# 16  2000    8  0.208812
# 17  2000   16  0.251314
# 18  2000   32  0.272916
# 19  2000   64  0.339619
# 20  2000  128  0.404223
# 21  4000    2  0.301717
# 22  4000    4  0.363121
# 23  4000    8  0.360421
# 24  4000   16  0.454226
# 25  4000   32  0.510529
# 26  4000   64  0.648937
# 27  4000  128  0.796846
# ExtraTreesClassifier | 0.665 | 0.158
# R2=0.9624830070909506
# =============================================================================

#%% AdaBoostClassifier
# =============================================================================
#        N    P      Time
# 0    500    2  0.059603
# 1    500    4  0.063404
# 2    500    8  0.071704
# 3    500   16  0.087805
# 4    500   32  0.118507
# 5    500   64  0.180010
# 6    500  128  0.304017
# 7   1000    2  0.067504
# 8   1000    4  0.076804
# 9   1000    8  0.093205
# 10  1000   16  0.126207
# 11  1000   32  0.190811
# 12  1000   64  0.321418
# 13  1000  128  0.585433
# 14  2000    2  0.085605
# 15  2000    4  0.103206
# 16  2000    8  0.137808
# 17  2000   16  0.207212
# 18  2000   32  0.344820
# 19  2000   64  0.623536
# 20  2000  128  1.182968
# 21  4000    2  0.121407
# 22  4000    4  0.158009
# 23  4000    8  0.230513
# 24  4000   16  0.377922
# 25  4000   32  0.671138
# 26  4000   64  1.258772
# 27  4000  128  2.493343
# AdaBoostClassifier | 0.69 | 0.57
# R2=0.936160949325187
# =============================================================================

# %% SVC
# =============================================================================
#        N    P      Time
# 0    500    2  0.005600
# 1    500    4  0.006000
# 2    500    8  0.006600
# 3    500   16  0.008400
# 4    500   32  0.011701
# 5    500   64  0.018401
# 6    500  128  0.031702
# 7   1000    2  0.021201
# 8   1000    4  0.022401
# 9   1000    8  0.026001
# 10  1000   16  0.031902
# 11  1000   32  0.045603
# 12  1000   64  0.072204
# 13  1000  128  0.124907
# 14  2000    2  0.093605
# 15  2000    4  0.096506
# 16  2000    8  0.109206
# 17  2000   16  0.133608
# 18  2000   32  0.190411
# 19  2000   64  0.297717
# 20  2000  128  0.511929
# 21  4000    2  0.397523
# 22  4000    4  0.427524
# 23  4000    8  0.471327
# 24  4000   16  0.597534
# 25  4000   32  0.822347
# 26  4000   64  1.259472
# 27  4000  128  2.129222
# SVC | 2.047 | 0.411
# R2=0.9886425437348983
# =============================================================================

#%% LogisticRegression(solver=liblinear)
# =============================================================================
#        N    P      Time
# 0    500    2  0.003000
# 1    500    4  0.002600
# 2    500    8  0.005200
# 3    500   16  0.005600
# 4    500   32  0.009101
# 5    500   64  0.005700
# 6    500  128  0.018601
# 7   1000    2  0.003500
# 8   1000    4  0.003200
# 9   1000    8  0.004700
# 10  1000   16  0.005400
# 11  1000   32  0.009301
# 12  1000   64  0.013001
# 13  1000  128  0.021301
# 14  2000    2  0.003400
# 15  2000    4  0.005500
# 16  2000    8  0.004700
# 17  2000   16  0.007700
# 18  2000   32  0.007300
# 19  2000   64  0.010001
# 20  2000  128  0.019201
# 21  4000    2  0.005500
# 22  4000    4  0.005800
# 23  4000    8  0.005900
# 24  4000   16  0.008600
# 25  4000   32  0.010101
# 26  4000   64  0.019701
# 27  4000  128  0.028202
# LogisticRegression(solver=liblinear) | 0.236 | 0.402
# R2=0.8692551288640031
# =============================================================================

# %% LogisticRegression(solver=sag)
# =============================================================================
#        N    P      Time
# 0    500    2  0.002000
# 1    500    4  0.002400
# 2    500    8  0.004200
# 3    500   16  0.005000
# 4    500   32  0.008000
# 5    500   64  0.016301
# 6    500  128  0.052203
# 7   1000    2  0.003200
# 8   1000    4  0.003500
# 9   1000    8  0.004900
# 10  1000   16  0.007500
# 11  1000   32  0.013401
# 12  1000   64  0.027002
# 13  1000  128  0.096606
# 14  2000    2  0.005700
# 15  2000    4  0.006300
# 16  2000    8  0.009701
# 17  2000   16  0.015201
# 18  2000   32  0.029102
# 19  2000   64  0.055603
# 20  2000  128  0.115907
# 21  4000    2  0.011501
# 22  4000    4  0.014101
# 23  4000    8  0.018001
# 24  4000   16  0.031702
# 25  4000   32  0.058503
# 26  4000   64  0.115607
# 27  4000  128  0.239814
# LogisticRegression(solver=sag) | 0.847 | 0.754
# R2=0.952226408046347
#
# =============================================================================

# %% SGDRegressor
# =============================================================================
#        N    P      Time
# 0    500    2  0.000500
# 1    500    4  0.000500
# 2    500    8  0.000600
# 3    500   16  0.000500
# 4    500   32  0.000600
# 5    500   64  0.000900
# 6    500  128  0.001700
# 7   1000    2  0.000700
# 8   1000    4  0.000800
# 9   1000    8  0.000800
# 10  1000   16  0.001000
# 11  1000   32  0.001200
# 12  1000   64  0.001700
# 13  1000  128  0.002700
# 14  2000    2  0.001300
# 15  2000    4  0.001500
# 16  2000    8  0.001600
# 17  2000   16  0.001700
# 18  2000   32  0.002000
# 19  2000   64  0.002800
# 20  2000  128  0.004800
# 21  4000    2  0.002500
# 22  4000    4  0.002700
# 23  4000    8  0.003000
# 24  4000   16  0.003200
# 25  4000   32  0.003900
# 26  4000   64  0.011001
# 27  4000  128  0.010401
# SGDRegressor | 0.884 | 0.303
# R2=0.9268589536644389
#
# =============================================================================
# %% SGDClassifier
# =============================================================================
#        N    P      Time
# 0    500    2  0.001200
# 1    500    4  0.001200
# 2    500    8  0.002200
# 3    500   16  0.001800
# 4    500   32  0.003100
# 5    500   64  0.004200
# 6    500  128  0.007900
# 7   1000    2  0.001700
# 8   1000    4  0.002000
# 9   1000    8  0.002800
# 10  1000   16  0.003900
# 11  1000   32  0.006300
# 12  1000   64  0.014201
# 13  1000  128  0.016801
# 14  2000    2  0.002700
# 15  2000    4  0.003200
# 16  2000    8  0.004100
# 17  2000   16  0.006100
# 18  2000   32  0.010801
# 19  2000   64  0.019501
# 20  2000  128  0.038602
# 21  4000    2  0.004600
# 22  4000    4  0.005200
# 23  4000    8  0.007400
# 24  4000   16  0.011201
# 25  4000   32  0.019601
# 26  4000   64  0.037602
# 27  4000  128  0.088105
# SGDClassifier | 0.831 | 0.598
# R2=0.9496665172502997
#
# =============================================================================

# %% Nystroem-SGDRegressor
# =============================================================================
#         N    P      Time
# 0    500    2  0.004200
# 1    500    4  0.005300
# 2    500    8  0.005300
# 3    500   16  0.005700
# 4    500   32  0.005300
# 5    500   64  0.005500
# 6    500  128  0.006500
# 7   1000    2  0.007500
# 8   1000    4  0.007600
# 9   1000    8  0.007900
# 10  1000   16  0.008300
# 11  1000   32  0.007900
# 12  1000   64  0.008000
# 13  1000  128  0.009501
# 14  2000    2  0.013301
# 15  2000    4  0.014001
# 16  2000    8  0.013901
# 17  2000   16  0.012801
# 18  2000   32  0.014301
# 19  2000   64  0.015101
# 20  2000  128  0.015601
# 21  4000    2  0.024301
# 22  4000    4  0.021701
# 23  4000    8  0.024201
# 24  4000   16  0.022901
# 25  4000   32  0.024801
# 26  4000   64  0.025001
# 27  4000  128  0.025701
# Nystroem-SGDRegressor | 0.73 | 0.043
# R2=0.9863913824618115
# =============================================================================

# %% Nystroem-SGDClassifier
# =============================================================================
#        N    P      Time
# 0    500    2  0.006800
# 1    500    4  0.008100
# 2    500    8  0.009201
# 3    500   16  0.010401
# 4    500   32  0.010001
# 5    500   64  0.011101
# 6    500  128  0.011501
# 7   1000    2  0.014301
# 8   1000    4  0.014801
# 9   1000    8  0.017801
# 10  1000   16  0.016201
# 11  1000   32  0.017001
# 12  1000   64  0.014801
# 13  1000  128  0.016401
# 14  2000    2  0.027802
# 15  2000    4  0.044203
# 16  2000    8  0.023301
# 17  2000   16  0.025001
# 18  2000   32  0.023401
# 19  2000   64  0.024001
# 20  2000  128  0.028302
# 21  4000    2  0.041002
# 22  4000    4  0.039802
# 23  4000    8  0.041702
# 24  4000   16  0.044303
# 25  4000   32  0.042902
# 26  4000   64  0.043602
# 27  4000  128  0.050103
# Nystroem-SGDClassifier | 0.737 | 0.03
# R2=0.9431441484107901
# =============================================================================

# %% RBFSampler-SGDRegressor
# =============================================================================
#        N    P      Time
# 0    500    2  0.002700
# 1    500    4  0.003000
# 2    500    8  0.003300
# 3    500   16  0.003500
# 4    500   32  0.003100
# 5    500   64  0.003800
# 6    500  128  0.004000
# 7   1000    2  0.005100
# 8   1000    4  0.010801
# 9   1000    8  0.010001
# 10  1000   16  0.007700
# 11  1000   32  0.004800
# 12  1000   64  0.004400
# 13  1000  128  0.005900
# 14  2000    2  0.007800
# 15  2000    4  0.008801
# 16  2000    8  0.008300
# 17  2000   16  0.008701
# 18  2000   32  0.007900
# 19  2000   64  0.008901
# 20  2000  128  0.009601
# 21  4000    2  0.015101
# 22  4000    4  0.016601
# 23  4000    8  0.017201
# 24  4000   16  0.018901
# 25  4000   32  0.019801
# 26  4000   64  0.016601
# 27  4000  128  0.019801
# RBFSampler-SGDRegressor | 0.761 | 0.013
# R2=0.8858856439411875
# =============================================================================

# %% RBFSampler-SGDClassifier
# =============================================================================
#        N    P      Time
# 0    500    2  0.005200
# 1    500    4  0.004800
# 2    500    8  0.007300
# 3    500   16  0.008700
# 4    500   32  0.006900
# 5    500   64  0.008100
# 6    500  128  0.010701
# 7   1000    2  0.014301
# 8   1000    4  0.011501
# 9   1000    8  0.013701
# 10  1000   16  0.014501
# 11  1000   32  0.015201
# 12  1000   64  0.015901
# 13  1000  128  0.017401
# 14  2000    2  0.016601
# 15  2000    4  0.019901
# 16  2000    8  0.021801
# 17  2000   16  0.022601
# 18  2000   32  0.024101
# 19  2000   64  0.026802
# 20  2000  128  0.027702
# 21  4000    2  0.034502
# 22  4000    4  0.037202
# 23  4000    8  0.046803
# 24  4000   16  0.049203
# 25  4000   32  0.047403
# 26  4000   64  0.055803
# 27  4000  128  0.045903
# RBFSampler-SGDClassifier | 0.857 | 0.108
# R2=0.9702019206987833
# =============================================================================

# %% AdditiveChi2Sampler-SGDRegressor
# =============================================================================
#        N    P      Time
# 0    500    2  0.000900
# 1    500    4  0.000900
# 2    500    8  0.001100
# 3    500   16  0.001400
# 4    500   32  0.002100
# 5    500   64  0.004100
# 6    500  128  0.008901
# 7   1000    2  0.001200
# 8   1000    4  0.001400
# 9   1000    8  0.001800
# 10  1000   16  0.002400
# 11  1000   32  0.004200
# 12  1000   64  0.008000
# 13  1000  128  0.016501
# 14  2000    2  0.002000
# 15  2000    4  0.002300
# 16  2000    8  0.003000
# 17  2000   16  0.004600
# 18  2000   32  0.008300
# 19  2000   64  0.016501
# 20  2000  128  0.036102
# 21  4000    2  0.003500
# 22  4000    4  0.004100
# 23  4000    8  0.005600
# 24  4000   16  0.009101
# 25  4000   32  0.017401
# 26  4000   64  0.035902
# 27  4000  128  0.071904
# AdditiveChi2Sampler-SGDRegressor | 0.878 | 0.656
# R2=0.9494260685424283
# =============================================================================

# %% AdditiveChi2Sampler-SGDClassifier
# =============================================================================
#        N    P      Time
# 0    500    2  0.001700
# 1    500    4  0.002000
# 2    500    8  0.003000
# 3    500   16  0.004000
# 4    500   32  0.009401
# 5    500   64  0.014601
# 6    500  128  0.022201
# 7   1000    2  0.002300
# 8   1000    4  0.002900
# 9   1000    8  0.004500
# 10  1000   16  0.007800
# 11  1000   32  0.013901
# 12  1000   64  0.028102
# 13  1000  128  0.052503
# 14  2000    2  0.003700
# 15  2000    4  0.004900
# 16  2000    8  0.008300
# 17  2000   16  0.015001
# 18  2000   32  0.029302
# 19  2000   64  0.061704
# 20  2000  128  0.122407
# 21  4000    2  0.006300
# 22  4000    4  0.008700
# 23  4000    8  0.014601
# 24  4000   16  0.027302
# 25  4000   32  0.051903
# 26  4000   64  0.147008
# 27  4000  128  0.293017
# AdditiveChi2Sampler-SGDClassifier | 0.892 | 0.813
# R2=0.9721015110498635
# =============================================================================

# %% SkewedChi2Sampler-SGDRegressor
# =============================================================================
#        N    P      Time
# 0    500    2  0.002200
# 1    500    4  0.002300
# 2    500    8  0.002400
# 3    500   16  0.002200
# 4    500   32  0.003400
# 5    500   64  0.003700
# 6    500  128  0.004000
# 7   1000    2  0.004800
# 8   1000    4  0.007700
# 9   1000    8  0.005100
# 10  1000   16  0.005200
# 11  1000   32  0.005700
# 12  1000   64  0.006900
# 13  1000  128  0.008400
# 14  2000    2  0.009001
# 15  2000    4  0.008700
# 16  2000    8  0.009901
# 17  2000   16  0.010501
# 18  2000   32  0.008400
# 19  2000   64  0.010301
# 20  2000  128  0.014801
# 21  4000    2  0.015301
# 22  4000    4  0.017101
# 23  4000    8  0.016401
# 24  4000   16  0.016601
# 25  4000   32  0.016701
# 26  4000   64  0.021501
# 27  4000  128  0.028202
# SkewedChi2Sampler-SGDRegressor | 0.887 | 0.111
# R2=0.9550982712835878
#
# =============================================================================
# %% SkewedChi2Sampler-SGDClassifier
# =============================================================================
#        N    P      Time
# 0    500    2  0.005000
# 1    500    4  0.004600
# 2    500    8  0.005800
# 3    500   16  0.006000
# 4    500   32  0.007100
# 5    500   64  0.007600
# 6    500  128  0.008500
# 7   1000    2  0.009701
# 8   1000    4  0.010001
# 9   1000    8  0.010801
# 10  1000   16  0.011201
# 11  1000   32  0.012001
# 12  1000   64  0.016101
# 13  1000  128  0.017301
# 14  2000    2  0.016201
# 15  2000    4  0.018901
# 16  2000    8  0.019801
# 17  2000   16  0.023101
# 18  2000   32  0.021801
# 19  2000   64  0.024101
# 20  2000  128  0.031802
# 21  4000    2  0.043302
# 22  4000    4  0.038402
# 23  4000    8  0.033202
# 24  4000   16  0.050603
# 25  4000   32  0.046803
# 26  4000   64  0.058703
# 27  4000  128  0.064504
# SkewedChi2Sampler-SGDClassifier | 0.957 | 0.136
# R2=0.9849116897590368
#
# =============================================================================

# %% LinearSVR
# =============================================================================
#        N    P      Time
# 0    500    2  0.000700
# 1    500    4  0.001200
# 2    500    8  0.001400
# 3    500   16  0.002900
# 4    500   32  0.007000
# 5    500   64  0.022401
# 6    500  128  0.070204
# 7   1000    2  0.001700
# 8   1000    4  0.001900
# 9   1000    8  0.003900
# 10  1000   16  0.007100
# 11  1000   32  0.014801
# 12  1000   64  0.044203
# 13  1000  128  0.118307
# 14  2000    2  0.003800
# 15  2000    4  0.005200
# 16  2000    8  0.008200
# 17  2000   16  0.012301
# 18  2000   32  0.029602
# 19  2000   64  0.071704
# 20  2000  128  0.195111
# 21  4000    2  0.005900
# 22  4000    4  0.008100
# 23  4000    8  0.013401
# 24  4000   16  0.024901
# 25  4000   32  0.054903
# 26  4000   64  0.146608
# 27  4000  128  0.488528
# LinearSVR | 0.984 | 1.036
# R2=0.9637040643096109
# =============================================================================

# %% LinearSVC
# =============================================================================
#        N    P      Time
# 0    500    2  0.001300
# 1    500    4  0.001500
# 2    500    8  0.002400
# 3    500   16  0.005300
# 4    500   32  0.012501
# 5    500   64  0.039902
# 6    500  128  0.110206
# 7   1000    2  0.002100
# 8   1000    4  0.003000
# 9   1000    8  0.004700
# 10  1000   16  0.010901
# 11  1000   32  0.029302
# 12  1000   64  0.091005
# 13  1000  128  0.233213
# 14  2000    2  0.004000
# 15  2000    4  0.005800
# 16  2000    8  0.010501
# 17  2000   16  0.027002
# 18  2000   32  0.060003
# 19  2000   64  0.185911
# 20  2000  128  0.504529
# 21  4000    2  0.008400
# 22  4000    4  0.014101
# 23  4000    8  0.026802
# 24  4000   16  0.054903
# 25  4000   32  0.139308
# 26  4000   64  0.459726
# 27  4000  128  1.430882
# LinearSVC | 1.114 | 1.179
# R2=0.9752390535359863
# =============================================================================

# %% LDA
# =============================================================================
#         N    P      Time
# 0    500    2  0.000800
# 1    500    4  0.000900
# 2    500    8  0.001200
# 3    500   16  0.002200
# 4    500   32  0.002400
# 5    500   64  0.005400
# 6    500  128  0.013901
# 7   1000    2  0.001000
# 8   1000    4  0.001200
# 9   1000    8  0.001900
# 10  1000   16  0.002500
# 11  1000   32  0.005400
# 12  1000   64  0.009201
# 13  1000  128  0.025301
# 14  2000    2  0.001500
# 15  2000    4  0.002300
# 16  2000    8  0.004000
# 17  2000   16  0.006800
# 18  2000   32  0.011601
# 19  2000   64  0.018101
# 20  2000  128  0.045903
# 21  4000    2  0.002500
# 22  4000    4  0.002500
# 23  4000    8  0.005300
# 24  4000   16  0.008200
# 25  4000   32  0.018501
# 26  4000   64  0.041602
# 27  4000  128  0.085405
# LDA | 0.771 | 0.78
# R2=0.9590269959183308
# =============================================================================

# %% QDA
# =============================================================================
#        N    P      Time
# 0    500    2  0.000500
# 1    500    4  0.000600
# 2    500    8  0.000700
# 3    500   16  0.000900
# 4    500   32  0.001400
# 5    500   64  0.003500
# 6    500  128  0.009001
# 7   1000    2  0.000600
# 8   1000    4  0.000600
# 9   1000    8  0.000900
# 10  1000   16  0.001000
# 11  1000   32  0.001900
# 12  1000   64  0.003600
# 13  1000  128  0.011501
# 14  2000    2  0.000800
# 15  2000    4  0.000800
# 16  2000    8  0.001000
# 17  2000   16  0.001500
# 18  2000   32  0.002900
# 19  2000   64  0.006500
# 20  2000  128  0.018201
# 21  4000    2  0.001200
# 22  4000    4  0.000900
# 23  4000    8  0.001200
# 24  4000   16  0.002000
# 25  4000   32  0.005200
# 26  4000   64  0.011301
# 27  4000  128  0.033302
# QDA | 0.449 | 0.737
# R2=0.8845633742261542
# =============================================================================

# %% KNeighborsRegressor
# =============================================================================
#         N    P      Time
# 0    500    2  0.000400
# 1    500    4  0.000500
# 2    500    8  0.000800
# 3    500   16  0.001200
# 4    500   32  0.002100
# 5    500   64  0.004000
# 6    500  128  0.007600
# 7   1000    2  0.000600
# 8   1000    4  0.000900
# 9   1000    8  0.001500
# 10  1000   16  0.002600
# 11  1000   32  0.004700
# 12  1000   64  0.009101
# 13  1000  128  0.018301
# 14  2000    2  0.001100
# 15  2000    4  0.001800
# 16  2000    8  0.003100
# 17  2000   16  0.005600
# 18  2000   32  0.010901
# 19  2000   64  0.021701
# 20  2000  128  0.042802
# 21  4000    2  0.002300
# 22  4000    4  0.003700
# 23  4000    8  0.006800
# 24  4000   16  0.012901
# 25  4000   32  0.030102
# 26  4000   64  0.051003
# 27  4000  128  0.101306
# KNeighborsRegressor | 1.103 | 0.841
# R2=0.9888497644079928
# =============================================================================

# %% KNeighborsClassifier
# =============================================================================
#        N    P      Time
# 0    500    2  0.000500
# 1    500    4  0.000600
# 2    500    8  0.000800
# 3    500   16  0.001300
# 4    500   32  0.002200
# 5    500   64  0.004000
# 6    500  128  0.007700
# 7   1000    2  0.000700
# 8   1000    4  0.000900
# 9   1000    8  0.001700
# 10  1000   16  0.002700
# 11  1000   32  0.004900
# 12  1000   64  0.009401
# 13  1000  128  0.018701
# 14  2000    2  0.001300
# 15  2000    4  0.001900
# 16  2000    8  0.003200
# 17  2000   16  0.005800
# 18  2000   32  0.011001
# 19  2000   64  0.021501
# 20  2000  128  0.043102
# 21  4000    2  0.002500
# 22  4000    4  0.003900
# 23  4000    8  0.007000
# 24  4000   16  0.012901
# 25  4000   32  0.025001
# 26  4000   64  0.049403
# 27  4000  128  0.100106
# KNeighborsClassifier | 1.063 | 0.806
# R2=0.9850191285764891
# =============================================================================

# %% NearestCentroid
# =============================================================================
#        N    P    Time
# 0    500    2  0.0003
# 1    500    4  0.0002
# 2    500    8  0.0003
# 3    500   16  0.0003
# 4    500   32  0.0003
# 5    500   64  0.0003
# 6    500  128  0.0003
# 7   1000    2  0.0003
# 8   1000    4  0.0003
# 9   1000    8  0.0003
# 10  1000   16  0.0004
# 11  1000   32  0.0003
# 12  1000   64  0.0004
# 13  1000  128  0.0005
# 14  2000    2  0.0004
# 15  2000    4  0.0003
# 16  2000    8  0.0004
# 17  2000   16  0.0004
# 18  2000   32  0.0005
# 19  2000   64  0.0005
# 20  2000  128  0.0007
# 21  4000    2  0.0005
# 22  4000    4  0.0006
# 23  4000    8  0.0005
# 24  4000   16  0.0005
# 25  4000   32  0.0007
# 26  4000   64  0.0013
# 27  4000  128  0.0026
# NearestCentroid | 0.472 | 0.163
# R2=0.7194092895160384
# =============================================================================

# %% GaussianProcessRegressor
# =============================================================================
#        N    P      Time
# 0    500    2  0.013001
# 1    500    4  0.013001
# 2    500    8  0.013001
# 3    500   16  0.018001
# 4    500   32  0.021001
# 5    500   64  0.027002
# 6    500  128  0.043003
# 7   1000    2  0.067004
# 8   1000    4  0.066004
# 9   1000    8  0.069004
# 10  1000   16  0.075004
# 11  1000   32  0.091005
# 12  1000   64  0.110006
# 13  1000  128  0.170010
# 14  2000    2  0.378022
# 15  2000    4  0.370021
# 16  2000    8  0.391022
# 17  2000   16  0.399023
# 18  2000   32  0.423024
# 19  2000   64  0.551031
# 20  2000  128  0.734042
# 21  4000    2  1.829105
# 22  4000    4  1.812104
# 23  4000    8  2.065118
# 24  4000   16  1.889108
# 25  4000   32  2.067118
# 26  4000   64  2.316133
# 27  4000  128  3.116178
# GaussianProcessRegressor | 2.272 | 0.188
# R2=0.9923343102480923
# =============================================================================

# %% GaussianProcessClassifier
# =============================================================================
#        N    P      Time
# 0    500    2  0.083005
# 1    500    4  0.072004
# 2    500    8  0.078004
# 3    500   16  0.072004
# 4    500   32  0.074004
# 5    500   64  0.077004
# 6    500  128  0.173010
# 7   1000    2  0.429025
# 8   1000    4  0.326019
# 9   1000    8  0.328019
# 10  1000   16  0.399023
# 11  1000   32  0.343020
# 12  1000   64  0.347020
# 13  1000  128  0.419024
# 14  2000    2  1.783102
# 15  2000    4  1.970113
# 16  2000    8  1.753100
# 17  2000   16  2.367135
# 18  2000   32  2.025115
# 19  2000   64  1.820104
# 20  2000  128  2.036117
# 21  4000    2  6.261358
# 22  4000    4  7.725442
# 23  4000    8  8.032459
# 24  4000   16  8.017459
# 25  4000   32  9.314533
# 26  4000   64  8.401481
# 27  4000  128  9.123522
# GaussianProcessClassifier | 2.21 | 0.054
# R2=0.9907415370410907
#
# =============================================================================

# %% KernelRidge
# =============================================================================
#        N    P      Time
# 0    500    2  0.005000
# 1    500    4  0.004000
# 2    500    8  0.005000
# 3    500   16  0.004000
# 4    500   32  0.005000
# 5    500   64  0.005000
# 6    500  128  0.007000
# 7   1000    2  0.021001
# 8   1000    4  0.021001
# 9   1000    8  0.022001
# 10  1000   16  0.022001
# 11  1000   32  0.025002
# 12  1000   64  0.026002
# 13  1000  128  0.026002
# 14  2000    2  0.167009
# 15  2000    4  0.167010
# 16  2000    8  0.168010
# 17  2000   16  0.164009
# 18  2000   32  0.172010
# 19  2000   64  0.170010
# 20  2000  128  0.165009
# 21  4000    2  0.835048
# 22  4000    4  0.829047
# 23  4000    8  0.836048
# 24  4000   16  0.885051
# 25  4000   32  0.813047
# 26  4000   64  0.835048
# 27  4000  128  0.848049
# KernelRidge | 2.51 | 0.035
# R2=0.9959090298585324
# =============================================================================

# %% GaussianNB
# =============================================================================
#        N    P    Time
# 0    500    2  0.0005
# 1    500    4  0.0005
# 2    500    8  0.0006
# 3    500   16  0.0005
# 4    500   32  0.0007
# 5    500   64  0.0007
# 6    500  128  0.0008
# 7   1000    2  0.0006
# 8   1000    4  0.0006
# 9   1000    8  0.0006
# 10  1000   16  0.0007
# 11  1000   32  0.0007
# 12  1000   64  0.0009
# 13  1000  128  0.0014
# 14  2000    2  0.0007
# 15  2000    4  0.0007
# 16  2000    8  0.0009
# 17  2000   16  0.0009
# 18  2000   32  0.0011
# 19  2000   64  0.0014
# 20  2000  128  0.0029
# 21  4000    2  0.0010
# 22  4000    4  0.0011
# 23  4000    8  0.0012
# 24  4000   16  0.0013
# 25  4000   32  0.0016
# 26  4000   64  0.0032
# 27  4000  128  0.0085
# GaussianNB | 0.538 | 0.263
# R2=0.7850137391075022
# =============================================================================

# %% GradientBoostingRegressor
# =============================================================================
#        N    P       Time
# 0    500    2   0.040002
# 1    500    4   0.058003
# 2    500    8   0.093005
# 3    500   16   0.164010
# 4    500   32   0.303017
# 5    500   64   0.587033
# 6    500  128   1.167067
# 7   1000    2   0.064003
# 8   1000    4   0.103006
# 9   1000    8   0.183011
# 10  1000   16   0.381022
# 11  1000   32   0.675039
# 12  1000   64   1.258072
# 13  1000  128   2.620150
# 14  2000    2   0.114006
# 15  2000    4   0.198011
# 16  2000    8   0.424024
# 17  2000   16   0.712041
# 18  2000   32   1.390079
# 19  2000   64   2.739156
# 20  2000  128   5.405309
# 21  4000    2   0.221013
# 22  4000    4   0.393023
# 23  4000    8   0.748043
# 24  4000   16   1.481085
# 25  4000   32   3.154181
# 26  4000   64   5.783331
# 27  4000  128  11.681668
# GradientBoostingRegressor | 1.019 | 0.903
# R2=0.9952727908923686
# =============================================================================

# %% HistGradientBoostingRegressor
# =============================================================================
#        N    P      Time
# 0    500    2  0.230013
# 1    500    4  0.276016
# 2    500    8  0.342019
# 3    500   16  0.407023
# 4    500   32  0.548032
# 5    500   64  0.911052
# 6    500  128  1.639094
# 7   1000    2  0.431025
# 8   1000    4  0.503029
# 9   1000    8  0.553032
# 10  1000   16  0.696040
# 11  1000   32  1.007057
# 12  1000   64  1.574090
# 13  1000  128  3.222184
# 14  2000    2  0.548031
# 15  2000    4  0.484028
# 16  2000    8  0.666038
# 17  2000   16  0.685039
# 18  2000   32  5.708327
# 19  2000   64  2.118121
# 20  2000  128  3.547203
# 21  4000    2  0.496028
# 22  4000    4  0.486028
# 23  4000    8  0.551032
# 24  4000   16  0.765044
# 25  4000   32  1.068061
# 26  4000   64  1.693097
# 27  4000  128  3.230185
# HistGradientBoostingRegressor | 0.324 | 0.479
# R2=0.7678706546162579
# =============================================================================

# %% GradientBoostingClassifier
# =============================================================================
#        N    P       Time
# 0    500    2   0.092005
# 1    500    4   0.087005
# 2    500    8   0.118007
# 3    500   16   0.188011
# 4    500   32   0.328019
# 5    500   64   0.603034
# 6    500  128   1.182068
# 7   1000    2   0.092005
# 8   1000    4   0.130008
# 9   1000    8   0.205012
# 10  1000   16   0.358020
# 11  1000   32   0.664038
# 12  1000   64   1.273072
# 13  1000  128   2.589148
# 14  2000    2   0.149009
# 15  2000    4   0.228013
# 16  2000    8   0.389022
# 17  2000   16   0.720041
# 18  2000   32   1.384079
# 19  2000   64   2.709155
# 20  2000  128   5.371307
# 21  4000    2   0.276016
# 22  4000    4   0.448025
# 23  4000    8   0.801046
# 24  4000   16   1.517087
# 25  4000   32   2.947168
# 26  4000   64   6.068347
# 27  4000  128  11.652667
# GradientBoostingClassifier | 0.932 | 0.812
# R2=0.9769174961235475
# =============================================================================

# %% HistGradientBoostingClassifier
# =============================================================================
#        N    P      Time
# 0    500    2  0.240014
# 1    500    4  0.315018
# 2    500    8  0.366021
# 3    500   16  0.437025
# 4    500   32  0.547031
# 5    500   64  0.812046
# 6    500  128  1.431082
# 7   1000    2  0.427024
# 8   1000    4  0.510029
# 9   1000    8  0.955055
# 10  1000   16  0.722041
# 11  1000   32  1.032059
# 12  1000   64  1.629093
# 13  1000  128  3.317190
# 14  2000    2  0.456026
# 15  2000    4  0.485028
# 16  2000    8  0.574033
# 17  2000   16  0.725041
# 18  2000   32  1.753100
# 19  2000   64  2.018116
# 20  2000  128  3.134179
# 21  4000    2  0.491028
# 22  4000    4  0.522030
# 23  4000    8  0.656038
# 24  4000   16  1.030059
# 25  4000   32  1.464084
# 26  4000   64  1.704097
# 27  4000  128  3.973227
# HistGradientBoostingClassifier | 0.338 | 0.456
# R2=0.8770135607255841
# =============================================================================

# %% LGBMRegressor
# =============================================================================
#        N    P      Time
# 0    500    2  0.027002
# 1    500    4  0.037002
# 2    500    8  0.106006
# 3    500   16  0.055003
# 4    500   32  0.060003
# 5    500   64  0.099006
# 6    500  128  0.186011
# 7   1000    2  0.058003
# 8   1000    4  0.053003
# 9   1000    8  0.057003
# 10  1000   16  0.085005
# 11  1000   32  0.146008
# 12  1000   64  0.369021
# 13  1000  128  0.842048
# 14  2000    2  0.058003
# 15  2000    4  0.062004
# 16  2000    8  0.067004
# 17  2000   16  0.099006
# 18  2000   32  0.180011
# 19  2000   64  0.396023
# 20  2000  128  1.016058
# 21  4000    2  0.058003
# 22  4000    4  0.074004
# 23  4000    8  0.068004
# 24  4000   16  0.098006
# 25  4000   32  0.176010
# 26  4000   64  0.365021
# 27  4000  128  0.816047
# LGBMRegressor | 0.356 | 0.585
# R2=0.8027816047015082
# =============================================================================

# %% LGBMClassifier
# =============================================================================
#        N    P      Time
# 0    500    2  0.027002
# 1    500    4  0.030002
# 2    500    8  0.030002
# 3    500   16  0.041002
# 4    500   32  0.064004
# 5    500   64  0.104006
# 6    500  128  0.202011
# 7   1000    2  0.056003
# 8   1000    4  0.062004
# 9   1000    8  0.056003
# 10  1000   16  0.162009
# 11  1000   32  0.148009
# 12  1000   64  0.281016
# 13  1000  128  0.987056
# 14  2000    2  0.066004
# 15  2000    4  0.071004
# 16  2000    8  0.074004
# 17  2000   16  0.105006
# 18  2000   32  0.165009
# 19  2000   64  0.364021
# 20  2000  128  0.705040
# 21  4000    2  0.055003
# 22  4000    4  0.068004
# 23  4000    8  0.073004
# 24  4000   16  0.115007
# 25  4000   32  0.583033
# 26  4000   64  0.381022
# 27  4000  128  0.732042
# LGBMClassifier | 0.513 | 0.597
# R2=0.8303431075227115
#
# =============================================================================

# %% MLPRegressor
# =============================================================================
#        N    P      Time
# 0    500    2  0.212012
# 1    500    4  0.141008
# 2    500    8  0.166009
# 3    500   16  0.697040
# 4    500   32  0.758043
# 5    500   64  0.803046
# 6    500  128  1.044060
# 7   1000    2  0.251014
# 8   1000    4  0.335019
# 9   1000    8  0.257015
# 10  1000   16  1.203068
# 11  1000   32  1.333076
# 12  1000   64  1.631093
# 13  1000  128  1.045060
# 14  2000    2  0.324018
# 15  2000    4  0.347020
# 16  2000    8  0.283016
# 17  2000   16  2.700155
# 18  2000   32  2.671153
# 19  2000   64  3.494200
# 20  2000  128  4.307246
# 21  4000    2  0.683039
# 22  4000    4  0.853049
# 23  4000    8  1.056061
# 24  4000   16  5.433311
# 25  4000   32  5.892337
# 26  4000   64  6.882394
# 27  4000  128  7.156409
# MLPRegressor | 0.887 | 0.598
# R2=0.8458696752996411
# =============================================================================

# %% MLPClassifier
# =============================================================================
#        N    P      Time
# 0    500    2  0.143008
# 1    500    4  0.674038
# 2    500    8  0.712041
# 3    500   16  0.745043
# 4    500   32  0.909052
# 5    500   64  0.944054
# 6    500  128  1.320076
# 7   1000    2  0.238013
# 8   1000    4  0.512030
# 9   1000    8  1.483085
# 10  1000   16  1.486085
# 11  1000   32  1.562089
# 12  1000   64  2.039117
# 13  1000  128  2.744157
# 14  2000    2  0.314018
# 15  2000    4  0.199011
# 16  2000    8  2.319132
# 17  2000   16  2.401137
# 18  2000   32  2.568147
# 19  2000   64  3.158181
# 20  2000  128  3.944226
# 21  4000    2  0.525030
# 22  4000    4  0.774045
# 23  4000    8  4.922282
# 24  4000   16  5.287302
# 25  4000   32  5.241300
# 26  4000   64  6.293360
# 27  4000  128  7.546431
# MLPClassifier | 0.695 | 0.557
# R2=0.7786148503465108
# =============================================================================
